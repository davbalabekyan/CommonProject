Feature: Super admin page/ Admin section functionality
  This feature will cover admin section of super admin page, especially: creating new admins,
  adding new created admins to database, checking functionality of different buttons on the given page

  Background: Login as super admin and click on create button
    Given Login as super admin
    Then Click on 'create' button and open popup

  @TC1.6.2 @Regression @Smoke
  Scenario: Check functionality of 'X' button
    Given Fill in name, surname, email fields and click on 'Generate password' button
    When Click on 'X' button
    Then Popup is closed
    And Click on 'create' button and open popup
    And Check all input fields are empty in create popup
    And Save value from email input field
    And Check user is not added in the DB

  @TC1.6.3 @Regression @Smoke
  Scenario: Check functionality of 'Generate password' button
    Given Click on 'Generate password' button
    Then 'Password' field is filled with autogenerated password

  @TC1.6.4 @Regression @Smoke
  Scenario: Check functionality to regenerate password
    Given Click on 'Generate password' button
    And Save value from password input field
    When Click on 'Generate password' button
    Then Check the generated password has been changed
    And Check 'Generate password' button is active

  @TC1.6.5 @Regression @Smoke
  Scenario: Check validations for Admin name, Admin surname and Admin email input fields
    Given Fill in input fields more than 50 symbols
    When Click on 'Save' button
    Then Check error messages of more symbols filled input fields

  @TC1.6.6 @Regression @Smoke
  Scenario Outline: Check email structure when creating new admin
    Given Fill email <invalidEmail>
    When Click on 'Save' button
    Then Check invalid email error message

    Examples:
      | invalidEmail        |
      | !!invalid@gmail.com |
      | invalid{@gmail.com  |
      | invalidgmail.com    |
      | invalid@gmailcom    |
      | invalid@gmail.c1om  |
      | invalid@gmail.COM   |
      | invalid@gmail-.com  |
      | invalid@gm--ail.com |
      | invalid@gm.ail.com  |
      | i@gmail.com         |

  @TC1.6.7 @Regression @Smoke
  Scenario: Check mandatoriness of all input fields
    Given Click on 'Save' button
    Then Check error messages of blank input fields

  @TC1.6.8 @Regression @Smoke
  Scenario: Check structure of autogenerated password
    Given Click on 'Generate password' button
    Then Check the structure of generated password

  @TC1.6.9 @Regression @Smoke
  Scenario: Check uniqueness of the Admin email
    Given Fill valid name and surname
    And Fill existed email
    And Click on 'Generate password' button
    When Click on 'Save' button
    Then Check error message of existed email

  @TC1.6.10 @Regression @Smoke
  Scenario: Check possibility to input in password field
    Then Check the user is not able to input any data in the password field

  @TC1.6.11 @Regression @Smoke
  Scenario: Check functionality to create new admin using valid credentials
    Given Fill in name, surname, email fields and click on 'Generate password' button
    And Click on 'Generate password' button
    And Save values from name, surname, password and email fields
    When Click on 'Save' button
    Then Popup is closed
    And Check user is added in the DB
    Then User is displayed in the list

  @TC1.6.12 @Regression @Smoke
  Scenario: Check possibility of creating new admin with an existing 'Admin name' and 'Admin Surname'
    Given Fill existed name and surname
    And Fill non-existed email
    And Click on 'Generate password' button
    And Save values from name, surname, password and email fields
    When Click on 'Save' button
    Then Check user is added in the DB
    And User is displayed in the list

  @TC1.6.13 @Regression @Smoke
  Scenario: Check how password is kept in DB
    And Fill in name, surname, email fields and click on 'Generate password' button
    And Click on 'Generate password' button
    And Save values from name, surname, password and email fields
    And Click on 'Save' button
    Then Check the admin password is hashed in the DB
